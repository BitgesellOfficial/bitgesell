{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.10","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"#E#Importing the libraries\nfrom playsound import playsound\nfrom gtts import gTTS\nimport sys\nfrom selenium import webdriver\n\n#Creating a function for text to speech to be used in a user friendly manner\ndef speak(text, filename):\n        tts = gTTS(text = text, lang = 'en') #Defining the text to speech handle\n        tts.save(filename + '.mp3') #Saving the audio file\n        playsound(filename + '.mp3') #Playing the audio\n        \nprint(\"Welcome to bitgesell!\") #Greeting the user\n\nspeak(\"Welcome to bitgesell!\", '111') #First impplementation of text to speech protocol\n\nspeak('''\nEnter 1 to know about bitgesell\nEnter 2 to watch tutorial on bitgesell\nEnter 3 to contribute to the bitgesell community through writing code\nEnter anything else to exit''', '112') #Providing the user with a bunch of options\n\ncommand1 = int(input('''\nEnter 1 to know about bitgesell\nEnter 2 to watch tutorial on bitgesell\nEnter 3 to contribute to the bitgesell community through writing code\nEnter anything else to exit'''))\n\n#Flow of control begins here\nif command1 == 1:\n    print('''\n    BGL is an experimental digital currency that enables instant payments to anyone, anywhere in the world. \n    BGL uses peer-to-peer technology to operate with no central authority: managing transactions and issuing money are \n    carried out collectively by the network. BGL Core is the name of open source software which enables the use of \n    this currency.\n\n    For more information read the original BGL whitepaper.\n\n    ''')\n    \n    input(\"Press Enter to exit....\")\n    \n    sys.exit() #Exiting the system\n    \nelif command1 == 2:\n    driver = webdriver.Chrome('chromedriver.exe')\n    driver.get(\"https://www.youtube.com/watch?v=_ggEdYZK6eI\")\n    \n    input('Press Enter to exit....')\n    \n    sys.exit() #Exiting the system\n    \nelif command1 == 3:\n    driver = webdriver.Chrome('chromedriver.exe')\n    driver.get(\"https://github.com/bitgesellofficial/bitgesell\")\n    \n    speak('''Go through the code files and make pull requests to contribute through code changes. Find bugs and resolve \n          them for the community.''', '113')\n    print('''Go through the code files and make pull requests to contribute through code changes. Find bugs and resolve \n          them for the community.''')\n    \n    input(\"Press enter to exit....\")\n    \n    sys.exit() #Exiting the system\n    \n#Flow of control ends here\n\n#End of program","metadata":{"trusted":true},"execution_count":1,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-f7e14d1ba8d7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m#\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'sys' is not defined"],"ename":"NameError","evalue":"name 'sys' is not defined","output_type":"error"}]}]}